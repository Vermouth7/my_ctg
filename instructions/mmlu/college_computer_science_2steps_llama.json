[
    {
        "question": "The access matrix approach to protection has the difficulty that",
        "answer": 0,
        "choices": [
            "the matrix, if stored directly, is large and can be clumsy to manage",
            "it is not capable of expressing complex protection requirements",
            "deciding whether a process has access to a resource is undecidable",
            "there is no way to express who has rights to change the access matrix itself"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the main concept of the access matrix approach, which is based on the idea of controlling access to resources by defining access rights and permissions.",
        "instruction 2": "Consider the potential limitations and challenges of this approach, such as the complexity of managing multiple access rights, the risk of conflicts between different users, and the need for ongoing maintenance and updates to ensure effective protection."
    },
    {
        "question": "An integer c is a common divisor of two integers x and y if and only if c is a divisor of x and c is a divisor of y. Which of the following sets of integers could possibly be the set of all common divisors of two integers?",
        "answer": 2,
        "choices": [
            "{-6,-2, -1, 1, 2, 6}",
            "{-6, -2, -1, 0, 1, 2, 6}",
            "{-6, -3, -2, -1, 1, 2, 3, 6}",
            "{-6, -3, -2, -1, 0, 1, 2, 3, 6}"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Consider the definition of a common divisor and how it relates to the integers x and y, focusing on the conditions for an integer c to be a common divisor.",
        "instruction 2": "Evaluate the possible sets of integers that could satisfy the conditions for common divisors, considering the properties of divisors and the relationships between x, y, and c."
    },
    {
        "question": "In the NoNicks operating system, the time required by a single file-read operation has four nonoverlapping components:\ndisk seek time-25 msec\ndisk latency time-8 msec\ndisk transfer time- 1 msec per 1,000 bytes\noperating system overhead-1 msec per 1,000 bytes + 10 msec\nIn version 1 of the system, the file read retrieved blocks of 1,000 bytes. In version 2, the file read (along with the underlying layout on disk) was modified to retrieve blocks of 4,000 bytes. The ratio of-the time required to read a large file under version 2 to the time required to read the same large file under version 1 is approximately",
        "answer": 1,
        "choices": [
            "1:4",
            "1:3.5",
            "1:1",
            "1.1:1"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Calculate the time required for a single file-read operation under version 1, considering the four components of time and the block size of 1,000 bytes.",
        "instruction 2": "Repeat the calculation for version 2, using the modified block size of 4,000 bytes and calculate the ratio of the time required for a large file read under version 2 to the time required for the same file read under version 1."
    },
    {
        "question": "You want to cluster 7 points into 3 clusters using the k-Means Clustering algorithm. Suppose after the first iteration, clusters C1, C2 and C3 contain the following two-dimensional points: C1 contains the 2 points: {(0,6), (6,0)} C2 contains the 3 points: {(2,2), (4,4), (6,6)} C3 contains the 2 points: {(5,5), (7,7)} What are the cluster centers computed for these 3 clusters?",
        "answer": 0,
        "choices": [
            "C1: (3,3), C2: (4,4), C3: (6,6)",
            "C1: (3,3), C2: (6,6), C3: (12,12)",
            "C1: (6,6), C2: (12,12), C3: (12,12)",
            "C1: (0,0), C2: (48,48), C3: (35,35)"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Calculate the mean (average) of the points in each cluster to determine the initial cluster centers, taking into account the two-dimensional coordinates of each point.",
        "instruction 2": "Verify that the calculated cluster centers are indeed the means of the points in each cluster, and that these initial centers will be used as the starting points for the next iteration of the k-Means algorithm."
    },
    {
        "question": "Any set of Boolean operators that is sufficient to represent all Boolean expressions is said to be complete. Which of the following is NOT complete?",
        "answer": 2,
        "choices": [
            "{AND, NOT}",
            "{NOT, OR}",
            "{AND, OR}",
            "{NAND}"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the Boolean operators typically used to represent Boolean expressions, such as AND, OR, and NOT, and consider how these operators can be combined to form more complex expressions.",
        "instruction 2": "Evaluate the completeness of each given set of Boolean operators, analyzing whether they can represent all possible Boolean expressions, and identify which set is not complete."
    },
    {
        "question": "Consider the collection of all undirected graphs with 10 nodes and 6 edges. Let M and m, respectively, be the maximum and minimum number of connected components in any graph in the collection. If a graph has no selfloops and there is at most one edge between any pair of nodes, which of the following is true?",
        "answer": 2,
        "choices": [
            "M = 10, m = 10",
            "M = 10, m = 1",
            "M = 7, m = 4",
            "M = 6, m = 4"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the constraints on the graphs in the collection, specifically the absence of self-loops and the maximum number of edges between any pair of nodes.",
        "instruction 2": "Consider the properties of connected components in a graph, including the maximum and minimum number of components, and how these properties relate to the given constraints and the size of the graph (10 nodes, 6 edges)."
    },
    {
        "question": "Resolution theorem proving for showing that a formula of propositional logic is not satisfiable has which of the following properties?\nI. It is a sound proof system in the sense that there does not exist a proof of the unsatisfiability of a satisfiable formula of propositional logic.\nII. It is a complete proof system in the sense that there is a proof of unsatisfiability for every unsa tisfiable formula of propositional logic.\nIII. It is a succinct proof system in the sense that whenever an unsatisfiable formula F of propositional logic has a resolution proof, F also has a proof whose length is polynomial in the length of F.",
        "answer": 2,
        "choices": [
            "I only",
            "III only",
            "I and II only",
            "I and III only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the properties of resolution theorem proving for showing that a formula of propositional logic is not satisfiable, focusing on the properties of soundness, completeness, and succinctness.",
        "instruction 2": "Analyze the implications of each property, examining how they relate to the process of proving unsatisfiability in propositional logic and the potential limitations or advantages of the resolution theorem proving method.\" }\n\nPlease provide your response in the same format as the examples provided. Your response should include two new instructions. \n\nQuestion: What is the number of ways to arrange the letters in the word \"listen\"?\nReasoning steps:  {\n  \"instruction 1\": \"Identify the individual letters in the word 'listen' and count their frequency to determine the number of possible arrangements."
    },
    {
        "question": "Which of the following statements describe(s) properties of a purely segmented memory system?\nI. It divides memory into units of equal size.\nII. It permits implementation of virtual memory.\nIII. It suffers from internal fragmentation.",
        "answer": 1,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the characteristics of a segmented memory system, focusing on how it divides memory into separate regions or segments, and how this affects memory allocation and deallocation.",
        "instruction 2": "Consider how the properties of a segmented memory system, such as internal fragmentation, affect its performance and efficiency, comparing these to other memory management techniques like paging or contiguous allocation."
    },
    {
        "question": "Which of the following statements about floating-point arithmetic is NOT true?",
        "answer": 2,
        "choices": [
            "It is inherently nonassociative because some numbers have no exact representation.",
            "It is inherently nonassociative because there have to be upper and lower bounds on the size of numbers.",
            "Associativity can be achieved with appropriate roundoff conventions.",
            "Some rational numbers have no exact representation."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics of floating-point arithmetic, including the use of binary representation, rounding errors, and the trade-off between precision and range.",
        "instruction 2": "Consider the specific statements and evaluate which one contradicts the fundamental principles or limitations of floating-point arithmetic, such as the inherent loss of precision or the potential for overflow."
    },
    {
        "question": "Suppose sharing of tiles in a multilevel directory structure is achieved with directory entries that are links pointing to a node containing information about a shared file. Information in this node includes (1) the owner of the file, (2) a count of the number of links to the tile, and (3) the disk block numbers of the file. What is a primary drawback to this approach to sharing?",
        "answer": 2,
        "choices": [
            "If the owner modifies the file, another user who does not share will see the changes.",
            "If the owner renames the file, other users will not be able to access it.",
            "If the owner is allowed to delete a file, dangling links may result.",
            "If any user who shares the file appends to it, others who share it will not be able to access the new disk blocks."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the potential issue with this approach, focusing on the implications of the count of links to the tile and the disk block numbers of the file.",
        "instruction 2": "Consider how this information might be used to manage access to the shared file, and how it could potentially lead to conflicts or inconsistencies in file management, such as file corruption or unauthorized access."
    },
    {
        "question": "Mergesort works by splitting a list of n numbers in half, sorting each half recursively, and merging the two halves. Which of the following data structures will allow mergesort to work in O(n log n) time?\nI. A singly linked list\nII. A doubly linked list\nIII. An array",
        "answer": 3,
        "choices": [
            "None",
            "III only",
            "I and II only",
            "I, II, and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key requirement for mergesort to work efficiently, which is the ability to efficiently split the list into two halves and merge the sorted halves.",
        "instruction 2": "Consider the properties of each data structure option, evaluating whether they can facilitate the necessary operations for mergesort, such as efficient splitting and merging, and determining which structures meet the O(n log n) time complexity requirement."
    },
    {
        "question": "If p(x) is the minimal-degree interpolating polynomial for the real-valued function f(x) at the n + 1 distinct real numbers x0, .... xn what is the maximum possible degree of p(x)?",
        "answer": 0,
        "choices": [
            "n",
            "n + 1",
            "n + 2",
            "2n"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the minimal-degree interpolating polynomial p(x) for the given function f(x) at the specified points x0, .... xn, considering the properties of polynomial interpolation.",
        "instruction 2": "Evaluate the maximum possible degree of p(x) based on the number of distinct interpolation points and the requirements for a minimal-degree interpolating polynomial."
    },
    {
        "question": "An internal hash table has 5 buckets, numbered 0, 1, 2, 3, 4. Keys are integers, and the hash function h(i) = i mod 5 is used, with linear resolution of collisions (i.e., if bucket h(i) is filled, the buckets h(i) + 1, h(i) + 2, ... are tried successively with all bucket numbers computed modulo 5). If elements with keys 13, 8, 24, 10, and 3 are inserted, m that order, into an initially blank hash table, then the content of the bucket numbered 2 is",
        "answer": 0,
        "choices": [
            "3",
            "8",
            "10",
            "13"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Apply the hash function h(i) = i mod 5 to each key to determine the initial bucket assignment for each element.",
        "instruction 2": "Consider how collisions are resolved using linear resolution, tracing the sequence of buckets that would be tried for each key as the hash table fills, to determine the final contents of the bucket numbered 2."
    },
    {
        "question": "TCP protocol is responsible (among other things) for",
        "answer": 2,
        "choices": [
            "Routing packets through the network",
            "Reliable delivery of packets between directly connected machines",
            "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected",
            "Dealing with differences among operating system architectures"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the primary functions of the TCP protocol, including its role in ensuring reliable data transfer and error-checking, as well as its ability to segment and reassemble data packets.",
        "instruction 2": "Consider the importance of TCP in ensuring data integrity and preventing data corruption during transmission, highlighting its key contributions to maintaining a stable and efficient network environment."
    },
    {
        "question": "Let A and B be two sets of words (strings) from Σ*, for some alphabet of symbols Σ. Suppose that B is a subset of A. Which of the following statements must always be true of A and B ?\nI. If A is finite, then B is finite.\nII. If A is regular, then B is regular.\nIII. If A is context-free, then B is context-free.",
        "answer": 0,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and II only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Examine the properties of sets A and B, focusing on their relationships and the constraints imposed by the given statements (I, II, and III). Identify any inherent connections between the statements.",
        "instruction 2": "Analyze the implications of each statement, considering how the properties of A and B are affected by the given conditions. Determine which statements must always be true, and explain the reasoning behind the conclusions."
    },
    {
        "question": "For all strings x, the function x^M is defined recursively as follows.\ne^M= e, and\nif w is a string and a is a string with length 1, then\n(aw)^M = aw^Ma.\nLet a be a string with length 1, and let x and y be arbitrary strings. Which of the following is true?",
        "answer": 3,
        "choices": [
            "a^M = a",
            "(ax)^M = (xa)^M",
            "(xy)^M = y^Mx^M",
            "None of the above"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the base case of the recursive definition, which is the case where the input string has length 1 (i.e., e^M = e).",
        "instruction 2": "Apply the recursive definition to the given strings a, x, and y, considering how the function x^M is defined in terms of concatenation and the length of the input string, to determine the correct statement that is true."
    },
    {
        "question": "Which of the following is NOT a reasonable justification for choosing to busy-wait on an asynchronous event?",
        "answer": 3,
        "choices": [
            "The wait is expected to be short.",
            "A busy-wait loop is easier to code than an interrupt handler.",
            "There is no other work for the processor to do.",
            "The program executes on a time-sharing system."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify potential justifications for choosing to busy-wait on an asynchronous event, such as ensuring timely processing of critical tasks or handling concurrent events.",
        "instruction 2": "Determine which of these justifications is not reasonable, considering factors like resource utilization, system performance, and alternative approaches to handling asynchronous events, such as using callbacks or coroutines."
    },
    {
        "question": "The language {ww | w in (0 + 1)*} is",
        "answer": 1,
        "choices": [
            "not accepted by any Turing machine",
            "accepted by some Turing machine, but by no pushdown automaton",
            "accepted by some pushdown automaton, but not context-free",
            "context-free, but not regular"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the regular expression pattern {ww | w in (0 + 1)*}, breaking down the components and understanding the syntax.",
        "instruction 2": "Determine the set of strings that match this regular expression pattern, considering the possible combinations of 'w' characters and the conditions specified within the parentheses."
    },
    {
        "question": "Which of the following statements about Ethernets is typically FALSE?",
        "answer": 0,
        "choices": [
            "Ethernets use circuit switching to send messages.",
            "Ethernets use buses with multiple masters.",
            "Ethernet protocols use a collision-detection method to ensure that messages are transmitted properly.",
            "Networks connected by Ethernets are limited in length to a few hundred meters."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the characteristics of Ethernet networks that are commonly associated with their functionality, such as their use of hubs or switches, and the type of communication protocols they employ.",
        "instruction 2": "Consider the specific statement being evaluated and determine if it contradicts any known facts or best practices about Ethernet networks, taking into account any potential exceptions or edge cases."
    },
    {
        "question": "Let P be a procedure that for some inputs calls itself (i.e., is recursive). If P is guaranteed to terminate, which of the following statements must be true?\nI. P has a local variable.\nII. P has an execution path where it does not call itself.\nIII. P either refers to a global variable or has at least one parameter.",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "I and II only",
            "II and III only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the conditions under which a recursive procedure P is guaranteed to terminate, focusing on the constraints that ensure a finite number of calls to the procedure.",
        "instruction 2": "Consider the implications of these conditions on the structure and properties of the procedure P, evaluating which of the given statements must be true in order for P to terminate."
    },
    {
        "question": "Which of the following comes closest to being a perfectly secure encryption scheme?",
        "answer": 3,
        "choices": [
            "The Caesar Cipher, a substitution cipher",
            "DES (Data Encryption Standard), a symmetric-key algorithm",
            "Enigma, a transposition cipher",
            "One-time pad"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Research and identify the fundamental principles and characteristics of a perfectly secure encryption scheme, such as unconditional security, computational complexity, and the ability to withstand all known attacks.",
        "instruction 2": "Evaluate the strengths and weaknesses of the given options, considering factors such as the type of encryption used, the key length, and any potential vulnerabilities or limitations, to determine which one comes closest to meeting the criteria for a perfectly secure encryption scheme."
    },
    {
        "question": "Of the following problems concerning a given undirected graph G, which is currently known to be solvable in polynomial time?",
        "answer": 1,
        "choices": [
            "Finding a longest simple cycle in G",
            "Finding a shortest cycle in G",
            "Finding ALL spanning trees of G",
            "Finding a largest clique in G"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the specific problem being referred to, such as graph traversal, connectivity, or subgraph isomorphism, and consider the current state of knowledge regarding its computational complexity.",
        "instruction 2": "Research and evaluate the current best-known algorithms and their time complexities for solving the identified problem, focusing on polynomial-time solutions and any relevant trade-offs or limitations."
    },
    {
        "question": "The IP protocol is primarily concerned with",
        "answer": 0,
        "choices": [
            "Routing packets through the network",
            "Reliable delivery of packets between directly connected machines",
            "Reliable delivery of large (multi-packet) messages between machines that are not necessarily directly connected",
            "Dealing with differences among operating system architectures"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the primary goals and functions of the Internet Protocol (IP), such as addressing, routing, and fragmentation, which are essential for ensuring efficient communication over the internet.",
        "instruction 2": "Consider how IP's focus on addressing and routing devices, rather than data content, allows for a more flexible and scalable network architecture compared to other protocols, such as TCP."
    },
    {
        "question": "Of the following, which best approximates the ratio of the number of nonterminal nodes to the total number of nodes in a complete K-ary tree of depth N?",
        "answer": 0,
        "choices": [
            "1/K",
            "K-1/K",
            "log_10 (1/N)",
            "N-1/m"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the total number of nodes in a complete K-ary tree of depth N by considering the recursive structure of the tree and the number of nodes at each level.",
        "instruction 2": "Calculate the number of nonterminal nodes by subtracting the number of leaf nodes from the total number of nodes, and then divide the result by the total number of nodes to obtain the desired ratio."
    },
    {
        "question": "Consider a computer system in which processes can request and release one or more resources. Once a process has been granted a resource, the process has exclusive use of that resource until it is released. If a process requests a resource that is already in use, the process enters a queue for that resource, waiting until the resource is available. Which of the following will NOT deal effectively with the problem of deadlock?",
        "answer": 0,
        "choices": [
            "Giving priorities to processes and ordering the wait queues by priority",
            "Having a process request all its required resources when it first begins, and restarting if it cannot obtain them all",
            "Numbering the resources and requiring that processes request resources in order of increasing number",
            "Having processes time out and restart after a random interval of waiting"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the fundamental problem of deadlock in the given system, which is the simultaneous blocking of multiple processes waiting for each other to release a resource.",
        "instruction 2": "Consider the various strategies for preventing or resolving deadlock, such as resource ordering, resource allocation, and deadlock detection, and evaluate which one is least effective in addressing the issue."
    },
    {
        "question": "\"Magic memory\"' has two operations: Read and Clear. Both are indivisible and mutually exclusive. Clear sets the magic memory to zero. Read returns a value that represents the number of Read operations since the last Clear operation. Which of the following is (are) true of \"Magic memory\"?\nI. It can provide the functionality of an atomic Test-and-Set.\nII. It can be used to coordinate processes running on a shared-memory multiprocessor.\nIII. It is only useful on a multiprocessor.",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and II"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the specific operations provided by the 'Magic memory' and their effects on the memory state.",
        "instruction 2": "Evaluate the implications of the 'Magic memory' operations on the behavior of the system, considering how the Read and Clear operations interact and affect the memory state, and assess the truth of each option."
    },
    {
        "question": "Which of the following is the name of the data structure in a compiler that is responsible for managing information about variables and their attributes?",
        "answer": 2,
        "choices": [
            "Abstract Syntax Tree (AST)",
            "Attribute Grammar",
            "Symbol Table",
            "Semantic Stack"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the data structure in a compiler that is responsible for managing information about variables and their attributes, considering the role it plays in the compilation process.",
        "instruction 2": "Research the specific name of this data structure, which is typically used in the context of compiler design and programming languages, and provide the correct answer."
    },
    {
        "question": "Which of the following algorithms has running time Θ(n^2) in the worst case but Θ(n log n) on average?",
        "answer": 3,
        "choices": [
            "Bubblesort",
            "Mergesort",
            "Heapsort",
            "Quicksort"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify a specific algorithm that exhibits a worst-case running time of O(n^2) but an average-case running time of O(n log n), such as quicksort or merge sort.",
        "instruction 2": "Explain the reasons behind the difference in running times, including factors such as the distribution of input data and the algorithm's handling of worst-case scenarios."
    },
    {
        "question": "Languages with a structure that implements abstract data types (e.g., a C++ class) can prevent access to components of this structure by all operations except those that are part of this structure. However, definitions of such a structure often contain declarations of components of the structure (e.g., the header file for a C++ class may contain declarations of its private components). For such a language, an object's name could be bound at run time to stack storage for its component values (direct representation) or to a stack pointer referencing heap storage for its component values (indirect representation). Which of the following statements about comparisons between direct and indirect representations is (are) true?\nI. Indirect representation noticeably increases compilation time.\nII. Direct representation decreases the time needed to access components of a variable.\nIII. When the storage size of some private component of a variable changes, indirect representation minimizes the number of recompilations of source modules that must be performed.",
        "answer": 3,
        "choices": [
            "I only",
            "III only",
            "I and II only",
            "II and III only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key differences between direct and indirect representations of object components, focusing on the implications for compilation time, access times, and recompilation requirements.",
        "instruction 2": "Evaluate the truth of each statement, considering the trade-offs and constraints associated with direct and indirect representations, and providing a clear justification for the conclusions reached."
    },
    {
        "question": "Which of the following is NOT a property of bitmap graphics?",
        "answer": 2,
        "choices": [
            "Fast hardware exists to move blocks of pixels efficiently.",
            "Realistic lighting and shading can be done.",
            "All line segments can be displayed as straight.",
            "Polygons can be filled with solid colors and textures."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics of bitmap graphics, such as the use of pixels to create images, fixed resolution, and limited scalability.",
        "instruction 2": "Consider how the properties of vector graphics, such as scalability and editable paths, differ from those of bitmap graphics, and identify the property that is unique to vector graphics and not shared with bitmap graphics."
    },
    {
        "question": "Which of the following is true of interrupts?",
        "answer": 2,
        "choices": [
            "They are generated when memory cycles are \"stolen\".",
            "They are used in place of data channels.",
            "They can indicate completion of an I/O operation.",
            "They cannot be generated by arithmetic operations."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics of interrupts, such as their ability to temporarily halt the normal flow of data processing and their use in managing multiple tasks or processes simultaneously.\" }\n\nPlease provide your response in the same format as the examples above. Please note that the response should not include any additional information or descriptions that are not part of the original question.\n\nPlease provide the reasoning steps and constraints for the following question:\n\nWhat is the average value of the function f(x) = x^2 + 3x - 4 over the interval [1, 5]?\n\nPlease provide your response in the following format:\n\n{\n  \"instruction 1\": \"_____________",
        "instruction 2": "_____________"
    },
    {
        "question": "In a height-balanced binary search tree, the heights of the left and right descendents of any node differ by at most 1. Which of the following are true of such a tree?\nI. Worst-case search time is logarithmic in the number of nodes.\nII. Average-case search time is logarithmic in the number of nodes.\nIII. Best-case search time is proportional to the height of the tree.\nIV. The height of the tree is logarithmic in the number of nodes.",
        "answer": 3,
        "choices": [
            "I and III only",
            "II and III only",
            "II and IV only",
            "I, II, and IV"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Understand the definition of a height-balanced binary search tree, focusing on the condition that the heights of the left and right descendents of any node differ by at most 1.",
        "instruction 2": "Apply the properties of a height-balanced binary search tree to each of the given statements, evaluating which ones are logically true based on the definition and any relevant tree properties, such as the relationship between search time and tree height."
    },
    {
        "question": "Bob writes down a number between 1 and 1,000. Mary must identify that number by asking \"yes/no\" questions of Bob. Mary knows that Bob always tells the truth. If Mary uses an optimal strategy, then she will determine the answer at the end of exactly how many questions in the worst case?",
        "answer": 3,
        "choices": [
            "1,000",
            "999",
            "500",
            "10"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the maximum number of bits required to represent a number between 1 and 1,000, considering the binary representation of each digit.",
        "instruction 2": "Using the fact that Bob always tells the truth, devise a strategy for Mary to ask yes/no questions that will allow her to identify the number in the worst-case scenario, ensuring that the number of questions is equal to the maximum number of bits required to represent the number."
    },
    {
        "question": "Which of the following is (are) true about virtual memory systems that use pages?\nI. The virtual address space can be larger than the amount of physical memory.\nII. Programs must be resident in main memory throughout their execution.\nIII. Pages correspond to semantic characteristics of the program.",
        "answer": 0,
        "choices": [
            "I only",
            "II only",
            "I and II",
            "I and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key concept of virtual memory and its relationship to physical memory, highlighting the role of pages in managing memory allocation.",
        "instruction 2": "Evaluate each statement individually, considering how virtual memory systems use pages to optimize memory usage, and determine which statements are true and which are false based on the principles of virtual memory."
    },
    {
        "question": "Which of the following is usually NOT represented in a subroutine's activation record frame for a stack-based programming language?",
        "answer": 1,
        "choices": [
            "Values of local variables",
            "A heap area",
            "The return address",
            "Stack pointer for the calling activation record"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key components typically stored in a subroutine's activation record frame, such as local variables, parameters, and return addresses, and consider how they are used to manage the subroutine's execution.",
        "instruction 2": "Determine which of the components listed is NOT typically stored in the activation record frame, such as the program counter or heap memory, and explain why it would not be included."
    },
    {
        "question": "Which of the following statements about a remote procedure call is true?",
        "answer": 2,
        "choices": [
            "It is used to call procedures with addresses that are farther than 2^16 bytes away.",
            "It cannot return a value.",
            "It cannot pass parameters by reference.",
            "It cannot call procedures implemented in a different language."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics of a remote procedure call, such as the ability to invoke a procedure on a different machine or process, and consider how this differs from other forms of communication.",
        "instruction 2": "Evaluate the benefits and potential drawbacks of using remote procedure calls, such as increased flexibility and potential security concerns, to determine which statement is true."
    },
    {
        "question": "Of the following sorting algorithms, which has a running time that is LEAST dependent on the initial ordering of the input?",
        "answer": 2,
        "choices": [
            "Insertion sort",
            "Quicksort",
            "Merge sort",
            "Selection sort"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics of each sorting algorithm, focusing on their time complexity and the role of initial ordering in their performance.",
        "instruction 2": "Compare and contrast the algorithms, considering how they handle input order and the potential impact on running time, to determine which algorithm is least affected by initial ordering."
    },
    {
        "question": "A particular parallel program computation requires 100 seconds when executed on a single processor. If 40 percent of this computation is \"inherently sequential\" (i.e., will not benefit from additional processors), then the theoretically best possible elapsed times for this program running with 2 and 4 processors, respectively, are",
        "answer": 3,
        "choices": [
            "20 and 10 seconds",
            "30 and 15 seconds",
            "50 and 25 seconds",
            "70 and 55 seconds"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the amount of computation that can be parallelized by subtracting the inherently sequential portion (40%) from the total computation time (100 seconds). This will give the time that can be reduced by adding processors.",
        "instruction 2": "Calculate the theoretically best possible elapsed times for the program running with 2 and 4 processors, taking into account the amount of parallelizable computation and the number of processors available."
    },
    {
        "question": "Consider the representation of six-bit numbers by two's complement, one's complement, or by sign and magnitude. In which representation is there overflow from the addition of the integers 011000 and 011000?",
        "answer": 3,
        "choices": [
            "Two's complement only",
            "Sign and magnitude and one's complement only",
            "Two's complement and one's complement only",
            "All three representations"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the binary representations of the given integers using each of the mentioned number representations (two's complement, one's complement, and sign and magnitude).",
        "instruction 2": "Perform the addition of the two integers in each representation, checking for any overflow or carry-over from the most significant bit, and determine which representation results in an overflow."
    },
    {
        "question": "Of the following, which best characterizes computers that use memory-mapped I/O?",
        "answer": 1,
        "choices": [
            "The computer provides special instructions for manipulating I/O ports.",
            "I/O ports are placed at addresses on the bus and are accessed just like other memory locations.",
            "To perform an I/O operation, it is sufficient to place the data in an address register and call the channel to perform the operation.",
            "Ports are referenced only by memory-mapped instructions of the computer and are located at hardwired memory locations."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key concept of memory-mapped I/O, which allows a computer to treat input/output operations as if they were memory accesses, and consider how this approach differs from traditional I/O methods.",
        "instruction 2": "Examine the benefits and limitations of memory-mapped I/O, such as improved performance and reduced overhead, but also potential limitations in terms of memory usage and addressing constraints."
    },
    {
        "question": "Many cryptographic protocols base their security on assumptions about the computational difficulty of integer factorization. Integer factorization serves this purpose because we believe that",
        "answer": 0,
        "choices": [
            "integer multiplication is a function whose inverse, factorization, remains difficult for a large class of inputs",
            "P = NP",
            "even if P = NP, integer factorization is still likely not to be polynomial-time computable",
            "testing primality is computationally intractable"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the specific computational problem being referred to, namely integer factorization, and explain its role in cryptographic protocols.",
        "instruction 2": "Explain the underlying assumption that makes integer factorization difficult, such as the fact that factoring large composite numbers is computationally infeasible for current and near-future algorithms, and discuss the implications of this assumption for cryptographic security."
    },
    {
        "question": "Which of the following sets of bit strings CANNOT be described with a regular expression?",
        "answer": 3,
        "choices": [
            "All bit strings whose number of zeros is a multiple of five",
            "All bit strings starting with a zero and ending with a one",
            "All bit strings with an even number of zeros",
            "All bit strings with more ones than zeros"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the characteristics of regular expressions, such as pattern matching and repetition, to determine which sets of bit strings can be described by these patterns.",
        "instruction 2": "Consider the limitations of regular expressions, such as their inability to handle complex or nested patterns, and determine which sets of bit strings may not be describable with regular expressions."
    },
    {
        "question": "Which of the following conditions can be expressed by a Boolean formula in the Boolean variables p_1, p_2, p_3, p_4 and the connectives ∧,∨ (without ¬)?\nI. At least three of p_1, p_2, p_3, p_4 are true.\nII. Exactly three of p_1, p_2, p_3, p_4 are true.\nIII. An even number of p_1, p_2, p_3, p_4 are true.",
        "answer": 0,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the Boolean variables and their possible values, considering the constraints imposed by the conditions.",
        "instruction 2": "Use the Boolean connectives to construct a formula that satisfies the given conditions, ensuring that the formula is in the correct format and can be evaluated as true or false for any given assignment of values to the Boolean variables."
    },
    {
        "question": "Two alternatives for interconnecting a set of processors with bidirectional links are (1) the fully interconnected network, in which each processor is directly connected to every other processor, and (2) the ring network, in which each processor is connected to two other processors. The worst-case path length for a network is the maximum, over all pairs of nodes in the network, of the minimum length paths (measured in number of links) between the nodes. For each type of interconnection of n processors, a figure of merit can be formed as the product of the number of links required for the network times the worst-case path length connecting any two processors. The ratio of this figure of merit for the fully interconnected network compared to that of the ring network, for even n > 2, is",
        "answer": 3,
        "choices": [
            "1/(n^2)",
            "1/(n(n-1))",
            "1/n",
            "(n-1)/n"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Compare the number of links required for each interconnection type, noting that the fully interconnected network requires n*(n-1)/2 links, whereas the ring network requires n links.",
        "instruction 2": "Evaluate the worst-case path length for each interconnection type, considering the maximum number of links required to connect any two processors in the network. For the fully interconnected network, this is simply 1, as each processor is directly connected to every other processor. For the ring network, calculate the maximum path length by considering the number of processors in the ring and the number of links required to traverse the ring."
    },
    {
        "question": "For a connected, undirected graph G = (V, E), which of the following must be true?\nI. Σ_{v∈V} degree(v) is even.\nII. |E| ≥ |V| − 1\nIII. G has at least one vertex with degree 1.",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and II"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the definition of a connected, undirected graph and its properties, such as the sum of the degrees of all vertices being equal to twice the number of edges.",
        "instruction 2": "Consider the relationships between the given statements and the properties of connected, undirected graphs, evaluating which statements must be true based on the definition and properties of the graph."
    },
    {
        "question": "In multiprogrammed systems it is advantageous if some programs such as editors and compilers can be shared by several users. Which of the following must be true of multiprogrammed systems in order that a single copy of a program can be shared by several users?\nI. The program is a macro.\nII. The program is recursive.\nIII. The program is reentrant.",
        "answer": 2,
        "choices": [
            "I only",
            "II only",
            "III only",
            "II and III only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristic of a program that allows it to be shared by multiple users, focusing on the ability to be executed independently by different users without affecting the program's functionality.",
        "instruction 2": "Consider the implications of each option (I, II, and III) and evaluate which one, if any, is a necessary condition for a program to be reentrant, thus allowing it to be shared by multiple users."
    },
    {
        "question": "Which of the following decimal numbers has an exact representation in binary notation?",
        "answer": 3,
        "choices": [
            "0.1",
            "0.2",
            "0.3",
            "0.5"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Recognize that binary notation represents numbers using only 0s and 1s, and that some decimal numbers may not have a finite or terminating representation in binary due to their inherent properties.",
        "instruction 2": "Identify the decimal numbers that have a finite or terminating representation in binary, such as fractions with denominators that are powers of 2, and determine the specific binary representation for each of these numbers."
    },
    {
        "question": "Function signatures describe the types of the arguments to a function as well as the return value of the function. For instance, the addition function on reals has a signature of\nadd : real x real -> real\nsince it takes two real numbers and returns a real number. But, for a language that allows functions as return values, addition could be considered to have the signature\nadd : real -> (real -> real)\nwhich means that add takes a single real (the first operand) and returns a new function that itself takes a single real (the second operand) and returns a real (the result). This process of reducing a function with multiple arguments to a function with fewer arguments is called currying. Which of the following is correct?",
        "answer": 0,
        "choices": [
            "Currying can be applied to any function to the point where it has exactly one input argument.",
            "Currying cannot be applied to functions of more than two arguments.",
            "Currying cannot be applied to functions that return functions as arguments.",
            "Currying cannot be applied w functions that haw arguments that are functions."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics of function signatures, including the types of arguments and return values, and how these are represented in the given examples.",
        "instruction 2": "Analyze the concept of currying and how it relates to the function signatures presented, considering how the process of currying reduces the number of arguments a function takes while maintaining its functionality."
    },
    {
        "question": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-back policy?",
        "answer": 0,
        "choices": [
            "0",
            "256",
            "1024",
            "2000"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the cache's capacity, block size, and direct-mapping policy, as well as the arrays' sizes and initial memory addresses.",
        "instruction 2": "Analyze the loop's iteration and memory access patterns to determine which cache lines will be accessed, which will be written back to memory, and how many bytes will be written as a result of the write-back policy."
    },
    {
        "question": "In which of the following representations of numbers by 8-bit words is the addition of the integers 109 and -42 within range?\nI. One's complement\nII. Two's complement\nIII. Sign and magnitude",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "I and II only",
            "I, II, and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Explain how each representation of numbers by 8-bit words (one's complement, two's complement, and sign and magnitude) handles signed integers, highlighting any differences in how positive and negative numbers are encoded.",
        "instruction 2": "Determine which representation would allow for the addition of 109 and -42 without overflowing, considering the maximum and minimum values that can be represented in each format and the effect of adding these specific integers."
    },
    {
        "question": "If a malicious process is granted temporary administrator-level access to a system",
        "answer": 3,
        "choices": [
            "the threat is over as soon as the process is killed",
            "the threat is over after the operating system is rebooted",
            "the thread is over after rebooting the machine and replacing files that show a virus infection",
            "the threat is often permanent until the entire disk is wiped clean"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the potential risks and consequences of a malicious process gaining temporary administrator-level access to a system, including the potential for data theft, modification, or destruction.",
        "instruction 2": "Consider the importance of implementing robust access controls, such as least privilege and regular auditing, to prevent or detect such malicious activities and minimize the potential damage."
    },
    {
        "question": "Which of the following statements about horizontal versus vertical microarchitecture is (are) true?\nI. Programs for horizontal architectures require more time steps than those for vertical architectures.\nII. Horizontal microinstructions are unencoded.\nIII. Horizontal microinstructions usually have a single opcode and multiple operand specifiers.",
        "answer": 1,
        "choices": [
            "I only",
            "II only",
            "III only",
            "II and III only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key differences between horizontal and vertical microarchitectures, focusing on the organization and execution of instructions.",
        "instruction 2": "Evaluate each statement, considering the implications of horizontal and vertical microinstructions on instruction execution time, encoding, and opcode-operand relationships."
    },
    {
        "question": "A \"strictly binary tree\" is a binary tree in which every node that is not a leaf has two children. Suppose that for a class of strictly binary trees there exists c > 0 such that, for any tree in the class, the ratio of the lengths of any two root-to-leaf paths is bounded above by c. Which of the following best characterizes the height h of any tree in this class, where N is the number of nodes in the tree and N > 1 ?",
        "answer": 2,
        "choices": [
            "h <= log2(N)",
            "h = 1/c * log2(N)",
            "h < c log2(N)",
            "h > c log2(N)"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key properties of the strictly binary tree class, specifically the condition on the ratio of root-to-leaf path lengths and the fact that every non-leaf node has two children.",
        "instruction 2": "Use the properties of the class to establish a relationship between the height h and the number of nodes N, considering the maximum possible height of a tree with N nodes and the constraints imposed by the root-to-leaf path length ratio."
    },
    {
        "question": "Which of the following sorting algorithms has average-case and worst-case running times of O(n log n)?",
        "answer": 2,
        "choices": [
            "Bubble sort",
            "Insertion sort",
            "Merge sort",
            "Quicksort"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the sorting algorithms commonly known for their O(n log n) time complexity, such as merge sort, heap sort, or quicksort, and consider their average-case and worst-case scenarios.",
        "instruction 2": "Evaluate the specific algorithm's performance characteristics, including its ability to handle large datasets, stability, and potential for optimization, to determine which one meets the O(n log n) time complexity criteria."
    },
    {
        "question": "Consider the following equations concerning a stack module that has the operations Push, Pop, Top, and IsEmpty. Which of the equations does NOT represent the conventional semantics of a stack?",
        "answer": 0,
        "choices": [
            "IsEmpty(Push(Stack,Elem)) = true",
            "Pop(Push(Stack,Elem)) = Stack",
            "Top(Push(Stack,Elem)) = Elem",
            "IsEmpty(Push(Push(Stack,Elem1),Elem2)) = false"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Familiarize yourself with the standard operations of a stack, including Push, Pop, Top, and IsEmpty, and their expected behavior.",
        "instruction 2": "Carefully analyze each equation, identifying which one deviates from the conventional semantics of a stack, such as violating the Last-In-First-Out (LIFO) principle or incorrectly handling stack operations."
    },
    {
        "question": "Assume that any assignment statement can be executed in unit time. If as many identical processors as needed are used, what is the minimum number of time units needed to execute the assignments\nA := B + C\nB := A - B\nC := A * E\nD := A/F\nE := B - C\nF := A + B\nwith the same result as if the assignments were executed in the order shown?",
        "answer": 2,
        "choices": [
            "1",
            "2",
            "3",
            "4"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the dependencies between the assignment statements, recognizing that some statements rely on the results of previous statements, and determine the order in which the statements can be executed independently.",
        "instruction 2": "Consider the minimum number of time units required to execute the assignments in the identified order, taking into account the potential for parallel processing and the need to ensure the correct execution of each statement."
    },
    {
        "question": "Two expressions E and F are said to be unifiable if there are substitutions for the variables of E and F that make the expressions lexically identical. In the following three expressions, only w, x, y, and z are variables.\nI. f(w,w)\nII. f(x,1)\nIII. f(y,g(z))\nWhich pairs of these expressions is (are) pairs of unifiable expressions?",
        "answer": 3,
        "choices": [
            "(I, II) only",
            "(I, III) only",
            "(II, III) only",
            "(I, II) and (I, III) only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the variables present in each expression and determine the possible substitutions that could be made to unify the expressions.",
        "instruction 2": "Consider the structure and composition of each expression, evaluating the feasibility of substituting variables to create lexically identical expressions."
    },
    {
        "question": "Which of the following instruction-set features is NOT generally considered an obstacle to aggressive pipelining of an integer unit?",
        "answer": 3,
        "choices": [
            "Condition codes set by every instruction",
            "Variable-length encoding of instructions",
            "Instructions requiring widely varying numbers of cycles to execute",
            "Several different classes (sets) of registers"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the instruction-set features that can potentially hinder aggressive pipelining of an integer unit, such as those that require complex control logic or have limited opportunities for instruction-level parallelism.",
        "instruction 2": "Evaluate the specific instruction-set feature in question, considering its potential impact on pipeline design and operation, and determine whether it is likely to be an obstacle to aggressive pipelining."
    },
    {
        "question": "Let k >= 2. Let L be the set of strings in {0, 1}^* such that x \\in L if and only if the number of 0's in x is divisible by k and the number of 1's in x is odd. The minimum number of states in a deterministic finite automaton (DFA) that recognizes L is",
        "answer": 1,
        "choices": [
            "k + 2",
            "2k",
            "k log k",
            "k^2"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the conditions for a string to be in the language L, focusing on the constraints on the number of 0's and 1's in the string.",
        "instruction 2": "Construct a DFA that recognizes L, considering the minimum number of states required to ensure that the automaton correctly identifies strings that meet the conditions for L, while minimizing the number of states."
    },
    {
        "question": "Let G = (V, E) be a finite directed acyclic graph with |E| > 0. Which of the following must be true?\nI. G has a vertex with no incoming edge.\nII. G has a vertex with no outgoing edge.\nIII. G has an isolated vertex, that is, one with neither an incoming edge nor an outgoing edge.",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and II only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Analyze the definition of a directed acyclic graph (DAG), focusing on the properties of vertices and edges, and identify any constraints or implications that can be inferred from this definition.",
        "instruction 2": "Consider each statement individually, using the constraints and implications derived from the definition of a DAG to determine whether each statement must be true for any finite directed acyclic graph with at least one edge."
    },
    {
        "question": "Let T be a depth-first search tree of a connected undirected graph G. For each vertex v of T, let pre(v) be the number of nodes visited up to and including v during a preorder traversal of T, and post(v) be the number of nodes visited up to and including v during a postorder traversal of T. The lowest common ancestor of vertices u and v in T is a vertex w of T such that w is an ancestor of both u and v, and no child of w is an ancestor of both u and v. Let (u, v) be an edge in G that is not in T, such that pre(u) < pre(v). Which of the following statements about u and v must be true?\nI. post(u) < post(v)\nII. u is an ancestor of v in T.\nIII. If w is the lowest common ancestor of u and v in T, then w = u.",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "III only",
            "II and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Define the key concepts of preorder traversal, postorder traversal, and the lowest common ancestor in the context of a depth-first search tree.",
        "instruction 2": "Analyze the given edge (u, v) in G that is not in T, considering the relationship between pre(u), pre(v), post(u), and post(v) to deduce the correct statements about u and v."
    },
    {
        "question": "In systems with support for automatic memory management, a garbage collector typically has the responsibility for reclaiming allocated memory objects whose contents cannot affect any future legal computation. Such objects are identified by determining that they cannot be reached from a root set. Which of the following is NOT part of the root set in a typical garbage collector?",
        "answer": 1,
        "choices": [
            "Actual parameters of the active procedures",
            "Dynamically allocated objects on the heap",
            "Global variables of the program",
            "Local variables on the call stack"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the concept of the root set in garbage collection, which refers to the set of objects that are directly accessible from the program's stack, registers, or static variables.",
        "instruction 2": "Consider the types of objects that are typically included in the root set, such as global variables, static variables, and stack variables, and identify which of the given options is NOT part of the root set."
    },
    {
        "question": "In the Internet Protocol (IP) suite of protocols, which of the following best describes the purpose of the Address Resolution Protocol?",
        "answer": 3,
        "choices": [
            "To translate Web addresses to host names",
            "To determine the IP address of a given host name",
            "To determine the hardware address of a given host name",
            "To determine the hardware address of a given IP address"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the primary function of the Address Resolution Protocol (ARP) within the IP suite, focusing on its role in resolving IP addresses to physical addresses (MAC addresses) for devices on the same network.",
        "instruction 2": "Consider how ARP works in conjunction with other protocols, such as the Internet Control Message Protocol (ICMP), to facilitate communication between devices and ensure efficient data transmission over networks."
    },
    {
        "question": "Which of the following language features requires that stack-based storage allocation be used rather than static allocation?",
        "answer": 0,
        "choices": [
            "Recursive procedures",
            "Arbitrary goto's",
            "Two-dimensional arrays",
            "Integer-valued functions"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the specific language feature that necessitates stack-based storage allocation, such as recursion or dynamic memory allocation, and explain why static allocation is not sufficient.",
        "instruction 2": "Consider the implications of using stack-based storage allocation for this feature, including the potential for stack overflows and the need for careful memory management."
    },
    {
        "question": "Which of the following is not a sentence that is generated by the grammar A -> BC, B -> x|Bx, C -> B|D, D -> y|Ey, E -> z?",
        "answer": 0,
        "choices": [
            "xyz",
            "xy",
            "xxzy",
            "xxxxy"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the production rules in the grammar and understand how they can be used to generate sentences by recursively applying the rules to the start symbol A.",
        "instruction 2": "Consider the possible sentence structures that can be generated using the given production rules and evaluate whether each sentence is valid according to the grammar, identifying any sentences that do not conform to the rules."
    },
    {
        "question": "Let T (n) be defined by T(1) = 7 and T(n + 1) = 3n + T(n) for all integers n ≥ 1. Which of the following represents the order of growth of T(n) as a function of n?",
        "answer": 2,
        "choices": [
            "Θ(n)",
            "Θ(n log n)",
            "Θ(n^2)",
            "Θ(n^2 log n)"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Examine the recursive definition of T(n) to identify the relationship between consecutive terms, focusing on the coefficients and the recursive structure.",
        "instruction 2": "Consider the asymptotic behavior of T(n) as n approaches infinity, analyzing the recursive pattern to determine the order of growth, which can be represented using Big O notation."
    },
    {
        "question": "Which of the following problems is (are) decidable?\nI. Given a (finite) string w, is w a prefix of the decimal expansion of π?\nII. Given a program and an input, is the program’s output the decimal expansion of π?\nIII. Given a program that takes as input a prefix of the decimal expansion of π, is the program’s output always the same for every prefix?",
        "answer": 0,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and II only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the problems listed as I, II, and III, focusing on the relationship between the input, output, and the concept of decidability.",
        "instruction 2": "Consider the inherent properties of the decimal expansion of π, such as its infinite and non-repeating nature, to determine the feasibility of solving each problem and whether they can be decided or not."
    },
    {
        "question": "Which of the following statements about circuits is (are) true?\nI. Combinational circuits may have feedback; sequential circuits do not.\nII. Combinational circuits have a \"memoryless\" property; sequential circuits do not.\nIII. Both sequential and combinational circuits must be controlled by an external clock.",
        "answer": 1,
        "choices": [
            "I only",
            "II only",
            "I and II only",
            "II and III only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics that distinguish combinational and sequential circuits, such as the presence of feedback loops and the role of memory in each type of circuit.",
        "instruction 2": "Evaluate the statements provided, considering the definitions of combinational and sequential circuits and the properties associated with each, to determine which statements are true and which are false."
    },
    {
        "question": "Two single-user workstations are attached to the same local area network. On one of these workstations, file pages are accessed over the network from a file server; the average access time per page is 0.1 second. On the other of these workstations, file pages are accessed from a local disk; the average access time per page is 0.05 second. A particular compilation requires 30 seconds of computation and 200 file page accesses. What is the ratio of the total time required by this compilation if run on the diskless (file server) workstation to the total time required if run on the workstation with the local disk, if it is assumed that computation is not overlapped with file access?",
        "answer": 1,
        "choices": [
            "1/1",
            "5/4",
            "5/3",
            "10/5"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Calculate the total time for the compilation on the diskless workstation by adding the computation time to the total file access time, which is determined by multiplying the number of file page accesses by the average access time from the file server.",
        "instruction 2": "Repeat the calculation for the workstation with the local disk, ensuring to use the appropriate average access time for the disk access. Once both total times are calculated, determine the ratio of the total time from the diskless workstation to the total time from the workstation with the local disk."
    },
    {
        "question": "Assume that a debugger places a breakpoint at a load instruction at virtual address 0x77E81234 (hexadecimal notation) in a debugged process P. If the text segment of P begins at 0x77E80000 in P’s virtual address space and if the debugger has mapped this same text segment at 0x01000000 in its virtual address space, which of the following is the virtual address used by the debugger in its WRITE operation, along with a description of how the debugger has mapped the virtual memory page containing this address?",
        "answer": 0,
        "choices": [
            "0x01001234; page mapped with READ/WRITE access",
            "0x01001234; page mapped with COPY-ON-WRITE access",
            "0x76E81234; page mapped with READ/WRITE access",
            "0x76E81234; page mapped with COPY-ON-WRITE access"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the relevant addresses involved in the problem: the virtual address 0x77E81234, the text segment base address 0x77E80000, and the debugger's mapped address 0x01000000.",
        "instruction 2": "Determine how the debugger maps the virtual memory page containing the original virtual address 0x77E81234 to its own virtual address space, considering the base address mapping and the offset calculation required to translate the original address to the debugger's mapped address."
    },
    {
        "question": "Which of the following considerations applies (apply) to choosing the page size in a paging system?\nI. An advantage of larger pages is that they lead to smaller page tables.\nII. An advantage of smaller pages is that they lead to less waste due to internal fragmentation.\nIII. Normally, the dominant factor in disk access time is not dependent on page length, so longer pages can be used advantageously.",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "I and III only",
            "I, II, and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the three options and determine which ones relate to the benefits of larger or smaller page sizes in a paging system, focusing on the trade-offs between page tables, internal fragmentation, and disk access time.",
        "instruction 2": "Evaluate the implications of each option, considering how they might influence the choice of page size, and determine which option is most relevant to the decision-making process.\" }\n\nPlease provide the instructions associated with the reasoning and constraints for the given question. The instructions should be in plain text JSON format, with the “key” being the instruction number and the “value” including the specific associated instructions. Your response must include two new instructions. \n\nQuestion: What is the volume of the solid in xyz-space bounded by the surfaces y = x^2, y = 2 - x^2, z = 0, and z = y + 3? \n\nPlease provide the instructions in the following format:\n\n{\n  \"instruction 1\": \"Instruction 1 content"
    },
    {
        "question": "Two processors, M-5 and M-7, implement the same instruction set. Processor M-5 uses a 5-stage pipeline and a clock cycle of 10 nanoseconds. Processor M-7 uses a 7-stage pipeline and a clock cycle of 7.5 nanoseconds. Which of the following is (are) true?\nI. M-7’s pipeline has better maximum throughput than M-5’s pipeline.\nII. The latency of a single instruction is shorter on M-7’s pipeline than on M-5’s pipeline.\nIII. Programs executing on M-7 will always run faster than programs executing on M-5.",
        "answer": 0,
        "choices": [
            "I only",
            "II only",
            "I and III",
            "II and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Calculate the maximum throughput for each processor by multiplying the clock cycle by the number of stages in the pipeline, considering the potential for pipelining to increase processing speed.",
        "instruction 2": "Evaluate the latency of a single instruction for each processor, taking into account the number of stages and clock cycle, and determine which processor has a shorter latency."
    },
    {
        "question": "Which of the following pairs of 8-bit, two's-complement numbers will result in overflow when the members of the pairs are added?",
        "answer": 3,
        "choices": [
            "11111111, 00000001",
            "00000001, 10000000",
            "11111111, 10000001",
            "10000001, 10101010"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the properties of two's-complement representation, specifically the range of values it can represent and the concept of overflow.",
        "instruction 2": "Examine the specific pairs of 8-bit numbers and calculate their sum, considering the possibility of overflow and the consequences of adding two numbers that exceed the maximum value representable by an 8-bit two's-complement number."
    },
    {
        "question": "Two computers communicate with each other by sending data packets across a local area network. The size of these packets is 1,000 bytes. The network has the capacity to carry 1,000 packets per second. The CPU time required to execute the network protocol to send one packet is 10 milliseconds. The maximum rate at which one computer can send data to another is approximately",
        "answer": 2,
        "choices": [
            "10,000 bytes/second",
            "25,000 bytes/ second",
            "100,000 bytes/ second",
            "500,000 bytes/ second"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Calculate the total time required to send one packet, considering both the CPU time and the time it takes for the packet to be transmitted across the network, and convert this time to bytes per second.",
        "instruction 2": "Determine the maximum rate at which one computer can send data to another by dividing the network's capacity to carry packets per second by the total time required to send one packet, and then converting this rate to bytes per second."
    },
    {
        "question": "Consider the following grammar.\nS → ( S )\nS → x\nWhich of the following statements is (are) true?\nI. The grammar is ambiguous.\nII. The grammar is suitable for top-down parsing.\nIII. The grammar is suitable for bottom-up parsing.",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "III only",
            "II and III only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Analyze the given grammar rules, identifying the non-terminal symbol S and the terminal symbols x and (.",
        "instruction 2": "Evaluate the grammar rules to determine whether they can lead to multiple valid parse trees (ambiguity), and assess their suitability for top-down and bottom-up parsing approaches."
    },
    {
        "question": "Hash tables can contribute to an efficient average-case solution for all of the problems described below EXCEPT:",
        "answer": 2,
        "choices": [
            "Counting distinct values: Given a set of n keys, determine the number of distinct key values.",
            "Dynamic dictionary: Support the operations of insert, delete, and search in a dictionary.",
            "Range search: Given values a and b, find all the records whose key value is in the range a, b.",
            "Symbol table lookup: Given a program identifier, find its type and address."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the characteristics of hash tables that make them useful for solving certain types of problems, such as fast lookup, efficient storage, and good distribution of keys.",
        "instruction 2": "Consider the specific problems listed and determine which ones may not be well-suited for hash table solutions due to factors such as non-uniform key distributions, complex data relationships, or high computational complexity."
    },
    {
        "question": "Let A be a finite set with m elements, and let B be a finite set with n elements. The number of distinct functions mapping A into B is",
        "answer": 0,
        "choices": [
            "n^m",
            "n!/(n - m)!",
            "n!",
            "n!/(m!(n - m)!)"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the number of distinct functions that map each element in set A to a specific element in set B, considering the cardinality of set A (m) and set B (n).",
        "instruction 2": "Use the concept of function composition to calculate the total number of distinct functions mapping A into B, taking into account the possibility of multiple functions mapping the same element in A to different elements in B."
    },
    {
        "question": "To compute the matrix product M_1M_2, where M_1 has p rows and q columns and where M_2 has q rows and r columns, takes time proportional to pqr, and the result is a matrix of p rows and r columns. Consider the product of three matrices N_1N_2N_3 that have, respectively, w rows and x columns, x rows and y columns, and y rows and z columns. Under what condition will it take less time to compute the product as (N_1N_2)N_3 (i.e., multiply the first two matrices first) than to compute it as N_1(N_2 N_3)?",
        "answer": 1,
        "choices": [
            "There is no such condition; i.e., they will always take the same time.",
            "1/x + 1/z < 1/w + 1/y",
            "x > y",
            "1/w + 1/x < 1/y + 1/z"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the number of operations required for each multiplication approach by counting the number of multiplications and additions involved in each calculation.",
        "instruction 2": "Compare the total number of operations for both approaches, considering the sizes of the matrices and the relative efficiency of the multiplication operations, to determine the condition under which the first approach is faster."
    },
    {
        "question": "The hit ratio of a cache memory is the percentage of accesses (reads and writes) for which data are found in the cache. Write-through is a policy whereby every write operation updates main memory. Write-back is a policy whereby a write operation to a line found in the cache does not affect main memory until the line is evicted from the cache. Write-allocation is a policy whereby a cache line is allocated and loaded on a write-miss. If it is assumed that write-allocation is always used, which of the following is true?",
        "answer": 2,
        "choices": [
            "Write-back usually results in a better hit ratio than write-through.",
            "Write-through usually results in a better hit ratio than write-back.",
            "The percentage of write operations resulting in a main memory operation will never be larger for write-back than for write-through.",
            "The percentage of write operations resulting in a main memory operation will never be larger for writethrough than for write-back."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics of the write policies mentioned, focusing on the timing of write operations and their impact on main memory.",
        "instruction 2": "Consider how the assumption of write-allocation being always used affects the behavior of the write policies, particularly in terms of when and how write operations are updated in main memory."
    },
    {
        "question": "A particular disk unit uses a bit string to record the occupancy or vacancy of its tracks, with O denoting vacant and 1 denoting occupied. A 32-bit segment of this string has the hexadecimal value D4FE2003. The percentage of occupied tracks for the corresponding part of the disk, to the nearest percent, is",
        "answer": 3,
        "choices": [
            "12%",
            "25%",
            "38%",
            "44%"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Convert the hexadecimal value D4FE2003 to a binary string, identifying the number of 1's and 0's in the string to determine the percentage of occupied tracks.",
        "instruction 2": "Calculate the percentage of occupied tracks by dividing the number of 1's by the total number of bits (32), multiplying by 100, and rounding to the nearest percent."
    },
    {
        "question": "An Euler circuit of an undirected graph is a circuit in which each edge of the graph appears exactly once. Which of the following undirected graphs must have an Euler circuit?\nI. A complete graph with 12 vertices\nII. A complete graph with 13 vertices\nIII. A tree with 13 vertices",
        "answer": 1,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and II"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the characteristics of an Euler circuit in an undirected graph, specifically the requirement that each edge appears exactly once.",
        "instruction 2": "Apply these characteristics to each of the given graph types, analyzing whether the number of vertices and edges, as well as the graph's structure, would allow for the existence of an Euler circuit."
    },
    {
        "question": "Which of the following characteristics of a programming language is best specified using a context-free grammar?",
        "answer": 2,
        "choices": [
            "Identifier length",
            "Maximum level of nesting",
            "Operator precedence",
            "Type compatibility"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the specific characteristic of a programming language that can be accurately described using a context-free grammar, such as the syntax of the language, rather than its semantics or functionality.",
        "instruction 2": "Consider how the rules and structure of a context-free grammar can be used to define the syntax of a programming language, focusing on the production of valid program code."
    },
    {
        "question": "Which of the following statements about datagrams sent by a node in a network using IPv4 protocol is (are) true?\nI. Datagrams at the source must be the size of the smallest maximum transmission unit (MTU) of all the links on a path to the destination.\nII. Datagrams may be fragmented during routing.\nIII. Datagrams are reassembled only at the destination.",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "III only",
            "II and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the specific characteristics of IPv4 datagrams, focusing on issues related to packet size, routing, and reassembly.",
        "instruction 2": "Evaluate each statement individually, considering the implications of fragmentation, MTU, and reassembly on the transmission of IPv4 datagrams, and determine which statements are true and which are false."
    },
    {
        "question": "A starvation-free job-scheduling policy guarantees that no job waits indefinitely for service. Which of the following job-scheduling policies is starvation-free?",
        "answer": 0,
        "choices": [
            "Round-robin",
            "Priority queuing",
            "Shortest job first",
            "Youngest job first"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics of starvation-free policies, such as ensuring that all jobs are eventually serviced, and that no job is forced to wait indefinitely.",
        "instruction 2": "Examine the specific job-scheduling policy options and determine which one satisfies the starvation-free criteria, considering factors such as job priority, scheduling algorithms, and potential deadlocks."
    },
    {
        "question": "Of the following, which gives the best upper bound for the value of f(N) where f is a solution to the recurrence f(2N + 1) = f(2N) = f(N) + log N for N >= 1, with f(1) = 0?",
        "answer": 3,
        "choices": [
            "O(log N)",
            "O(N log N)",
            "O(log N) + 0(1)",
            "O((log N)^2)"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the base case and recursive case in the given recurrence relation, focusing on how the function f(N) is defined and how it relates to the function values at smaller input sizes.",
        "instruction 2": "Consider the growth rate of the function f(N) based on the recurrence relation, using the given information to establish an upper bound for the function's value at N, taking into account the logarithmic term and the recursive structure."
    },
    {
        "question": "Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer chip is to be chosen uniformly at random from the 9 chips shipped by the companies. If the chosen chip is found to be defective, what is the probability that the chip came from Company Y?",
        "answer": 3,
        "choices": [
            "2 / 9",
            "4 / 9",
            "1 / 2",
            "2 / 3"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Calculate the total number of defective chips shipped by both companies, which is 1 + 2 = 3.",
        "instruction 2": "Determine the probability of choosing a chip from Company Y, given that the chosen chip is defective, by dividing the number of defective chips from Company Y by the total number of defective chips and multiplying by the total number of chips from Company Y (4)."
    },
    {
        "question": "Which of the following problems can be solved by a standard greedy algorithm?\nI. Finding a minimum spanning tree in an undirected graph with positive-integer edge weights\nII. Finding a maximum clique in an undirected graph\nIII. Finding a maximum flow from a source node to a sink node in a directed graph with positive-integer edge capacities",
        "answer": 0,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and II only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the characteristics of each problem, such as the type of graph, edge weights, and objective function, to identify potential connections to greedy algorithms.",
        "instruction 2": "Evaluate the feasibility of applying a standard greedy algorithm to each problem, considering whether the greedy choice property holds and whether the algorithm can produce an optimal solution."
    },
    {
        "question": "A program that checks spelling works in the following way. A hash table has been defined in which each entry is a Boolean variable initialized to false. A hash function has been applied to each word in the dictionary, and the appropriate entry in the hash table has been set to true. To check the spelling in a document, the hash function is applied to every word in the document, and the appropriate entry in the hash table is examined. Which of the following is (are) correct?\nI. true means the word was in the dictionary.\nII. false means the word was not in the dictionary.\nIII. Hash table size should increase with document size.",
        "answer": 1,
        "choices": [
            "I only",
            "II only",
            "I and II only",
            "II and III only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the purpose of the hash table and how it is used in the spelling checker program, focusing on the initialization of the entries and the hash function application.",
        "instruction 2": "Examine the Boolean values in the hash table, considering the implications of setting an entry to true or false, and evaluate the correctness of the given statements I, II, and III."
    },
    {
        "question": "One approach to handling fuzzy logic data might be to design a computer using ternary (base-3) logic so that data could be stored as “true,” “false,” and “unknown.” If each ternary logic element is called a flit, how many flits are required to represent at least 256 different values?",
        "answer": 2,
        "choices": [
            "4",
            "5",
            "6",
            "7"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Understand the concept of ternary logic and its relationship to binary logic, identifying the key differences in how each system represents information.",
        "instruction 2": "Apply the principles of ternary logic to determine the minimum number of flits required to represent 256 different values, considering the unique properties of ternary arithmetic and the potential for unknown or uncertain values."
    },
    {
        "question": "Local caching of files is common in distributed file systems, but it has the disadvantage that",
        "answer": 0,
        "choices": [
            "Temporary inconsistencies among views of a file by different machines can result",
            "The file system is likely to be corrupted when a computer crashes",
            "A much higher amount of network traffic results",
            "Caching makes file migration impossible"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the primary benefit of local caching in distributed file systems, such as improved performance and reduced network traffic.",
        "instruction 2": "Consider the potential drawbacks of local caching, including data consistency issues, versioning conflicts, and the need for manual synchronization, and how these limitations can impact the overall effectiveness of the distributed file system."
    },
    {
        "question": "Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.\nArray B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192.\nAssume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged, direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.\nfor (i = 0; i < 256; i++)\n        A[i] = A[i] + B[2*i];\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-through policy?",
        "answer": 2,
        "choices": [
            "0",
            "256",
            "1024",
            "2048"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the cache block size and the number of elements in each array that fit within this block size. Calculate the total number of cache blocks required to store the arrays A and B.",
        "instruction 2": "Analyze the loop's iteration and the memory access patterns to identify which cache blocks are accessed, which are evicted, and which are written to memory, considering the direct-mapped cache and the write-through policy."
    },
    {
        "question": "At time 0, five jobs are available for execution on a single processor, with service times of 25, 15, 5, 3, and 2 time units. Which of the following is the minimum value of the average completion time of these jobs?",
        "answer": 2,
        "choices": [
            "50",
            "208/5",
            "92/5",
            "10"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the total service time of the five jobs by summing the individual service times.",
        "instruction 2": "Calculate the average completion time by dividing the total service time by the number of jobs, and then consider how the service times can be rearranged to minimize the average completion time."
    },
    {
        "question": "Let G = (V, E) be a connected, undirected graph, and let a and b be two distinct vertices in V. Let P_1 be the problem of finding a shortest simple path between a and b, and let P_2 be the problem of finding a longest simple path between a and b. Which of the following statements about P_1 and P_2 is true?",
        "answer": 1,
        "choices": [
            "Both P_1 and P_2 can be solved in polynomial time.",
            "P_1 can be solved in polynomial time but P_2 is not known to be solvable in polynomial time.",
            "P_1 is not known to be solvable in polynomial time but P_2 can be solved in polynomial time.",
            "It is not known whether either P_1 or P_2 can be solved in polynomial time."
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key properties of the graph G, such as its connectedness and undirected nature, to determine the types of paths that can be formed between vertices a and b.",
        "instruction 2": "Consider the differences between the objectives of P_1 and P_2, evaluating how the shortest and longest path problems can be approached using graph algorithms and traversal techniques, such as Dijkstra's algorithm and depth-first search."
    },
    {
        "question": "A major advantage of direct mapping of a cache is its simplicity. The main disadvantage of this organization is that",
        "answer": 2,
        "choices": [
            "it does not allow simultaneous access to the intended data and its tag",
            "it is more expensive than other types of cache organizations",
            "the cache hit ratio is degraded if two or more blocks used alternately map onto the same block frame in the cache",
            "its access time is greater than that of other cache organizations"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key benefit of direct mapping, highlighting its simplicity and ease of implementation.",
        "instruction 2": "Consider the primary drawback of direct mapping, such as the limited capacity and potential for conflicts, which can lead to reduced performance and increased complexity in managing cache memory."
    },
    {
        "question": "Let M be a single-tape, deterministic Turing machine with tape alphabet {blank,0,1}, and let C denote the (possibly infinite) computation of M starting with a blank tape. The input to each problem below is M, together with a positive integer n. Which of the following problems is (are) decidable?\nI. The computation C lasts for at least n steps.\nII. The computation C lasts for at least n steps, and M prints a 1 at some point after the nth step.\nIII. M scans at least n distinct tape squares during the computation C.",
        "answer": 3,
        "choices": [
            "None",
            "III only",
            "I and II only",
            "I and III only"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key components of the Turing machine, including the tape alphabet, the computation, and the input parameters, to better understand the problems being posed.",
        "instruction 2": "Analyze each problem individually, considering the conditions and constraints presented, and determine whether they can be determined by the Turing machine's computation, and thus, are decidable."
    },
    {
        "question": "A 3-way, set-associative cache is",
        "answer": 0,
        "choices": [
            "one in which each main memory word can be stored at any of 3 cache locations",
            "effective only if 3 or fewer processes are running alternately on the processor",
            "possible only with write-back",
            "faster to access than a direct-mapped cache"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key characteristics of a 3-way set-associative cache, such as the cache size, block size, and associativity, to understand how it differs from other cache organizations like direct-mapped or fully-associative caches.",
        "instruction 2": "Consider how the 3-way set-associative cache handles cache misses, including the replacement policy and any relevant optimization techniques, to better understand its performance and efficiency in memory access."
    },
    {
        "question": "Consider an object-oriented language in which all entities are objects. Two relationships arise: (1) the instance relationship, between an object and the class of which that object is a member, and (2) the subclass relationship, between a class and the superclass from which that class inherits properties. In such a language, when a message is sent to an object requesting execution of one of its methods (procedures), the method is located by following",
        "answer": 0,
        "choices": [
            "one instance link and then zero or more subclass links",
            "one or more instance links and then one or more subclass links",
            "one or more instance links",
            "one subclass link and then one or more instance links"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key concepts in the given language, including the instance relationship and subclass relationship, and how they affect the execution of methods.",
        "instruction 2": "Consider the process of method invocation, explaining how the language's object-oriented features, such as inheritance and polymorphism, influence the search for the method being executed."
    },
    {
        "question": "In a pipelined RISC computer where all arithmetic instructions have the same CPI (cycles per instruction), which of the following actions would improve the execution time of a typical program?\nI. Increasing the clock cycle rate\nII. Disallowing any forwarding in the pipeline\nIII. Doubling the sizes of the instruction cache and the data cache without changing the clock cycle time",
        "answer": 3,
        "choices": [
            "I only",
            "II only",
            "III only",
            "I and III"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the factors that affect the execution time of a typical program in a pipelined RISC computer, focusing on the instruction cache and data cache, as well as the clock cycle rate.",
        "instruction 2": "Evaluate the potential impact of each option on the execution time, considering how they affect the instruction cache, data cache, and clock cycle rate, and determine which option would lead to the greatest improvement."
    },
    {
        "question": "A microcomputer used for data acquisition and control is required to digitize and process four analog input signals and to output their average continually; i.e., in real time. The time for an external analog-to-digital converter (which is triggered by a CPU instruction) to digitize one input is 12 microseconds, and only one digitization occurs at a time. Five CPU instructions, including the triggering instruction, must be executed for each signal digitized. Ten CPU instructions are executed in order to average each set of four samples and output this value. The time to convert the output from digital to analog form is to be ignored. If it is assumed that suitable data buffering is employed, then the maximum average instruction execution time that allows the microcomputer to keep up with the input-output data rates, is",
        "answer": 2,
        "choices": [
            "0.8 microseconds",
            "1.2 microseconds",
            "1.6 microseconds",
            "2.4 microseconds"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Determine the total time required to digitize one input signal, including the time for the CPU instructions and the external analog-to-digital converter (ADC). This involves calculating the sum of the time spent in each stage: 12 microseconds for the ADC and 5 CPU instructions * (the time for one CPU instruction).",
        "instruction 2": "Calculate the total time required to digitize all four input signals, considering that only one digitization occurs at a time. This involves multiplying the total time for one input by 4."
    },
    {
        "question": "Suppose that a certain software product has a mean time between failures of 10,000 hours and has a mean time to repair of 20 hours. If the product is used by 100 customers, what is its availability?",
        "answer": 3,
        "choices": [
            "80%",
            "90%",
            "98%",
            "99.80%"
        ],
        "subject": "college_computer_science",
        "instruction 1": "Identify the key components of availability, including the mean time between failures and mean time to repair, and how they relate to the product's overall performance.",
        "instruction 2": "Calculate the availability by using the formula for availability, which involves dividing the total time the product is available by the total time it is in operation, considering the mean time between failures and mean time to repair for each customer."
    }
]